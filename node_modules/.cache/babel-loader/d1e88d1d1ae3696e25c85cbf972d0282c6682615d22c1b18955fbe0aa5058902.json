{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"biometric-auth\"\n};\nconst _hoisted_2 = {\n  class: \"video-container\"\n};\nconst _hoisted_3 = {\n  ref: \"videoRef\",\n  autoplay: \"\",\n  playsinline: \"\"\n};\nconst _hoisted_4 = {\n  class: \"buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Eye = _resolveComponent(\"Eye\");\n  const _component_Fingerprint = _resolveComponent(\"Fingerprint\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", {\n    class: \"title\"\n  }, \"Biometric Authentication Here\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"video\", _hoisted_3, null, 512 /* NEED_PATCH */)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.detectFace && _ctx.detectFace(...args)),\n    class: \"auth-btn\"\n  }, [_createVNode(_component_Eye, {\n    size: \"20\"\n  }), _cache[2] || (_cache[2] = _createTextVNode(\" Authenticate Face \"))]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.authenticateFingerprint && _ctx.authenticateFingerprint(...args)),\n    class: \"auth-btn\"\n  }, [_createVNode(_component_Fingerprint, {\n    size: \"20\"\n  }), _cache[3] || (_cache[3] = _createTextVNode(\" Authenticate Fingerprint \"))])]), _createCommentVNode(\" ✅ Help text \"), _cache[5] || (_cache[5] = _createElementVNode(\"p\", {\n    class: \"help-text\"\n  }, \"Unable to authenticate? Contact administrator!\", -1 /* HOISTED */)), _createElementVNode(\"p\", {\n    class: _normalizeClass([\"message\", {\n      success: _ctx.faceDetected,\n      error: !_ctx.faceDetected\n    }])\n  }, _toDisplayString(_ctx.message), 3 /* TEXT, CLASS */)]);\n}","map":{"version":3,"names":["class","ref","autoplay","playsinline","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","args","_ctx","detectFace","_createVNode","_component_Eye","size","_createTextVNode","authenticateFingerprint","_component_Fingerprint","_createCommentVNode","_normalizeClass","success","faceDetected","error","message"],"sources":["/home/r3dh4t/Projects/FYP/Yes/secure_biometrics/src/components/AuthPage.vue"],"sourcesContent":["<template>\n  <div class=\"biometric-auth\">\n    <h2 class=\"title\">Biometric Authentication Here</h2>\n\n    <div class=\"video-container\">\n      <video ref=\"videoRef\" autoplay playsinline></video>\n    </div>\n\n    <div class=\"buttons\">\n      <button @click=\"detectFace\" class=\"auth-btn\">\n        <Eye size=\"20\" /> Authenticate Face\n      </button>\n      <button @click=\"authenticateFingerprint\" class=\"auth-btn\">\n        <Fingerprint size=\"20\" /> Authenticate Fingerprint\n      </button>\n    </div>\n\n    <!-- ✅ Help text -->\n    <p class=\"help-text\">Unable to authenticate? Contact administrator!</p>\n\n    <p class=\"message\" :class=\"{ success: faceDetected, error: !faceDetected }\">\n      {{ message }}\n    </p>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, onMounted, ref } from \"vue\";\nimport * as faceapi from \"face-api.js\";\nimport { Fingerprint, Eye } from \"lucide-vue-next\";\n\nexport default defineComponent({\n  components: {\n    Fingerprint,\n    Eye,\n  },\n  setup() {\n    const videoRef = ref(null);\n    const message = ref(\"\");\n    const faceDetected = ref(false);\n\n    // Load face-api.js models\n    const loadFaceModels = async () => {\n      const MODEL_URL = \"/models\";\n      await Promise.all([\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\n        faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL),\n      ]);\n    };\n\n    // Start webcam feed\n    const startVideo = () => {\n      navigator.mediaDevices\n        .getUserMedia({ video: true })\n        .then((stream) => {\n          if (videoRef.value) videoRef.value.srcObject = stream;\n        })\n        .catch((err) => {\n          console.error(\"Error accessing webcam:\", err);\n        });\n    };\n\n    // Detect face in the video stream\n    const detectFace = async () => {\n      const options = new faceapi.TinyFaceDetectorOptions();\n      const detections = await faceapi.detectAllFaces(videoRef.value, options);\n\n      if (detections.length > 0) {\n        message.value = \"✅ Face recognized!\";\n        faceDetected.value = true;\n      } else {\n        message.value = \"❌ No face detected!\";\n        faceDetected.value = false;\n      }\n    };\n\n    // Fingerprint authentication via WebAuthn\n    const authenticateFingerprint = async () => {\n      try {\n        const publicKey = {\n          challenge: new Uint8Array(32),\n          allowCredentials: [{ type: \"public-key\", id: new Uint8Array(16) }],\n          timeout: 60000,\n        };\n        await navigator.credentials.get({ publicKey });\n        message.value = \"✅ Fingerprint authenticated!\";\n      } catch (error) {\n        message.value = \"❌ Fingerprint authentication failed!\";\n      }\n    };\n\n    onMounted(async () => {\n      await loadFaceModels();\n      startVideo();\n    });\n\n    return {\n      videoRef,\n      message,\n      detectFace,\n      authenticateFingerprint,\n      faceDetected,\n    };\n  },\n});\n</script>\n\n<style scoped>\n.biometric-auth {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  text-align: center;\n}\n\n.title {\n  font-size: 1.5rem;\n  margin-bottom: 10px;\n}\n\n.video-container {\n  border: 2px solid #ccc;\n  border-radius: 10px;\n  overflow: hidden;\n  width: 300px;\n  height: 200px;\n  margin-bottom: 10px;\n}\n\nvideo {\n  width: 100%;\n  height: 100%;\n}\n\n.buttons {\n  display: flex;\n  gap: 10px;\n  margin-top: 10px;\n}\n\n.auth-btn {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  padding: 10px 15px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background 0.3s;\n}\n\n.auth-btn:hover {\n  background-color: #0056b3;\n}\n\n.message {\n  margin-top: 15px;\n  font-weight: bold;\n}\n\n.success {\n  color: green;\n}\n\n.error {\n  color: red;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAGpBA,KAAK,EAAC;AAAiB;;EACnBC,GAAG,EAAC,UAAU;EAACC,QAAQ,EAAR,EAAQ;EAACC,WAAW,EAAX;;;EAG5BH,KAAK,EAAC;AAAS;;;;uBAPtBI,mBAAA,CAsBM,OAtBNC,UAsBM,G,0BArBJC,mBAAA,CAAoD;IAAhDN,KAAK,EAAC;EAAO,GAAC,+BAA6B,sBAE/CM,mBAAA,CAEM,OAFNC,UAEM,GADJD,mBAAA,CAAmD,SAAnDE,UAAmD,8B,GAGrDF,mBAAA,CAOM,OAPNG,UAOM,GANJH,mBAAA,CAES;IAFAI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,UAAA,IAAAD,IAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAEZ,KAAK,EAAC;MAChCe,YAAA,CAAiBC,cAAA;IAAZC,IAAI,EAAC;EAAI,I,0BAVtBC,gBAAA,CAUyB,qBACnB,G,GACAZ,mBAAA,CAES;IAFAI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAM,uBAAA,IAAAN,IAAA,CAAAM,uBAAA,IAAAP,IAAA,CAAuB;IAAEZ,KAAK,EAAC;MAC7Ce,YAAA,CAAyBK,sBAAA;IAAZH,IAAI,EAAC;EAAI,I,0BAb9BC,gBAAA,CAaiC,4BAC3B,G,KAGFG,mBAAA,iBAAoB,E,0BACpBf,mBAAA,CAAuE;IAApEN,KAAK,EAAC;EAAW,GAAC,gDAA8C,sBAEnEM,mBAAA,CAEI;IAFDN,KAAK,EApBZsB,eAAA,EAoBa,SAAS;MAAAC,OAAA,EAAoBV,IAAA,CAAAW,YAAY;MAAAC,KAAA,GAAUZ,IAAA,CAAAW;IAAY;sBACnEX,IAAA,CAAAa,OAAO,wB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}